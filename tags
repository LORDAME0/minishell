Mmain	mandatory/main.c	/^int	main(int n, char **args, char **env)$/
add_element_2d_array	mandatory/2d_array_utils_2.c	/^char	**add_element_2d_array(char **array, char *el/
add_element_2d_array_last	mandatory/2d_array_utils_3.c	/^char	**add_element_2d_array_last(char **array, cha/
add_element_not_last_2d_array	mandatory/2d_array_utils_2.c	/^static char	**add_element_not_last_2d_array(char */
add_element_to_last_2d_array	mandatory/2d_array_utils_2.c	/^static char	**add_element_to_last_2d_array(char **/
add_key	mandatory/export.c	/^void  add_key(t_env **env, char *key, char *value)/
add_key_token	mandatory/add_token_2.c	/^void	add_key_token(t_token **head, char *start, ch/
add_keyword_token	mandatory/tokenizer_utils.c	/^char	*add_keyword_token(t_token **head, char *curr/
add_seq_back	mandatory/parser.c	/^static void	add_seq_back(t_seq **list, t_seq *new_/
add_token_back	mandatory/tokenizer_utils_2.c	/^void	add_token_back(t_token **list, t_token *new_t/
add_variable_back	mandatory/dup_env.c	/^void	add_variable_back(t_env **list, t_env *new_va/
add_word_token	mandatory/add_token_2.c	/^void	add_word_token(t_token **head, char *start, c/
allocat_tab	libft/ft_split.c	/^static	char	**allocat_tab(char const *s, char c, i/
allocate_string	libft/ft_split.c	/^static char	**allocate_string(char	**tab, char con/
bcd	mandatory/cd.c	/^int	bcd(char *path, t_env **env)$/
becho	mandatory/echo.c	/^void	becho(char **args, int fd)$/
bexport	mandatory/export.c	/^int bexport(char **args, t_env **env)$/
cd_home	mandatory/cd.c	/^static	int	cd_home(t_env	**env)$/
check_first_and_last	mandatory/syntax_analysis.c	/^bool	check_first_and_last(t_token *token)$/
check_pip	mandatory/syntax_analysis.c	/^bool	check_pip(t_token *token)$/
check_quotes	mandatory/syntax_analysis.c	/^bool	check_quotes(t_token *token)$/
check_redirection	mandatory/syntax_analysis.c	/^bool	check_redirection(t_token *token)$/
chop_key	mandatory/tokenizer.c	/^char	*chop_key(t_token **tokens, char *current)$/
chop_word	mandatory/tokenizer.c	/^char	*chop_word(t_token **tokens, char *current, b/
corrector	mandatory/corrector.c	/^t_token	*corrector(t_token *token)$/
create_seq	mandatory/parser.c	/^static t_seq	*create_seq(char **args, int in, int /
create_token	mandatory/tokenizer_utils_2.c	/^t_token	*create_token(char *elem, int type)$/
create_variable	mandatory/dup_env.c	/^t_env	*create_variable(char *key, char *value)$/
delete_element_2d_array	mandatory/2d_array_utils.c	/^char	**delete_element_2d_array(char **array, size_/
dup_2d_array	mandatory/2d_array_utils.c	/^char	**dup_2d_array(char **array)$/
dup_env	mandatory/dup_env.c	/^t_env	*dup_env(char **env)$/
e_builtins	mandatory/eval.c	/^enum e_builtins {e_echo, e_env, e_export, e_unset,/
e_token_types	mandatory/main.h	/^enum e_token_types {redirection, word, pip, space,/
eval_in_redirection	mandatory/parser.c	/^static void	eval_in_redirection(t_seq *seq, char */
eval_out_redirection	mandatory/parser.c	/^static void	eval_out_redirection(t_seq *seq, char /
eval_pipes	mandatory/parser.c	/^static void	eval_pipes(t_seq *seq)$/
eval_redirection	mandatory/parser.c	/^static t_token	*eval_redirection(t_seq *seq, t_tok/
eval_seq	mandatory/eval.c	/^void	eval_seq(t_seq *list, t_env	**denv)$/
exec_builtin	mandatory/eval.c	/^void	exec_builtin(t_env **env, t_seq *seq, int bui/
exec_seq	mandatory/exec.c	/^void	exec_seq(t_seq *seq, t_env **denv)$/
expander	mandatory/expander.c	/^t_token	*expander(t_token *token, t_env *env)$/
find_in_2d_array	mandatory/2d_array_utils.c	/^int	find_in_2d_array(char **array, char *str)$/
find_in_path	mandatory/eval.c	/^char *find_in_path(char *cmd, char **env)$/
find_key	mandatory/cd.c	/^t_env *find_key(t_env *env, char *key)$/
find_value	mandatory/expander.c	/^char	*find_value(t_env *env, char *key)$/
free_2d_array	mandatory/2d_array_utils_2.c	/^void	free_2d_array(char **array)$/
free_env	mandatory/dup_env.c	/^void	free_env(t_env *env)$/
free_seq	mandatory/parser.c	/^void	free_seq(t_seq *seq)$/
free_tab	libft/ft_split.c	/^static char	**free_tab(char **tab, int size)$/
free_token	mandatory/tokenizer_utils_2.c	/^void	free_token(t_token *token)$/
free_tokens	mandatory/tokenizer_utils_2.c	/^void	free_tokens(t_token *token)$/
ft_add_history	mandatory/add_history.c	/^void	ft_add_history(char *cmd)$/
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/
ft_calclenght	libft/ft_atoi.c	/^static long long	ft_calclenght(const char *str)$/
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/
ft_charexist	libft/ft_strtrim.c	/^static int	ft_charexist(char c, char const *set)$/
ft_exec	mandatory/eval.c	/^pid_t	ft_exec(char *cmd, t_seq *seq, char **env)$/
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/
ft_isspace	libft/ft_atoi.c	/^static unsigned int	ft_isspace(char sp)$/
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/
ft_itoa_negative	libft/ft_itoa.c	/^static char	*ft_itoa_negative(long long n)$/
ft_itoa_positive	libft/ft_itoa.c	/^static char	*ft_itoa_positive(int n)$/
ft_lstadd_back	libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/
ft_lstadd_front	libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/
ft_lstclear	libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *)/
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))/
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/
ft_lstlast	libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *),/
ft_lstnew	libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/
ft_lstsize	libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size/
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t/
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_/
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/
ft_split_paths	mandatory/eval.c	/^char	**ft_split_paths(char **env)$/
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s)$/
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, /
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/
ft_strjoin_free	mandatory/utils.c	/^char	*ft_strjoin_free(char *s1, char *s2)$/
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size/
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size/
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned/
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, siz/
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char /
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s, char const *set)$/
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start,/
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/
get_last_seq	mandatory/parser.c	/^static t_seq	*get_last_seq(t_seq *seq)$/
get_last_token	mandatory/tokenizer_utils_2.c	/^t_token	*get_last_token(t_token *token)$/
get_last_var	mandatory/dup_env.c	/^t_env	*get_last_var(t_env *var)$/
heredoc	mandatory/parser.c	/^static int	heredoc(char *delimiter)$/
init_2d_array	mandatory/2d_array_utils_2.c	/^char	**init_2d_array(void)$/
init_indexs	mandatory/utils.c	/^void	init_indexs(int amount, int value, ...)$/
is_builtin	mandatory/eval.c	/^int	is_builtin(char *cmd)$/
is_flag	mandatory/echo.c	/^static int	is_flag(char *str)$/
is_inside_quotes	mandatory/tokenizer.c	/^bool	is_inside_quotes(char c)$/
is_keyword	mandatory/tokenizer_utils.c	/^bool	is_keyword(char c)$/
is_quote	mandatory/tokenizer_utils.c	/^bool	is_quote(char c)$/
is_valid_key	mandatory/export.c	/^bool  is_valid_key(char *key)$/
joiner	mandatory/corrector.c	/^t_token	*joiner(t_token *token)$/
panic	mandatory/utils.c	/^void	panic(bool con, char *msg, const char *func)$/
parser	mandatory/parser.c	/^t_seq	*parser(t_token *list)$/
parsing	mandatory/parsing.c	/^t_seq	*parsing(char *line, t_env *denv)$/
pip_token	mandatory/add_token.c	/^void	pip_token(t_token **head)$/
print_2d_array	mandatory/2d_array_utils.c	/^void	print_2d_array(char **array, int fd)$/
print_logo	mandatory/print_logo.c	/^void	print_logo()$/
print_seq	mandatory/parser.c	/^void	print_seq(t_seq *seq)$/
print_tokens	mandatory/print_tokens.c	/^void	print_tokens(t_token *token)$/
quote_token	mandatory/add_token.c	/^void	quote_token(t_token **head, char *current, bo/
redirection_token	mandatory/add_token.c	/^void	redirection_token(t_token **head, char *curre/
remove_quotes	mandatory/corrector.c	/^t_token	*remove_quotes(t_token *token)$/
remove_space	mandatory/corrector.c	/^t_token	*remove_space(t_token *token)$/
return_token_type	mandatory/tokenizer_utils.c	/^char	*return_token_type(int type)$/
shell_loop	mandatory/shell_loop.c	/^void	shell_loop(t_env **denv)$/
size_of_2d_array	mandatory/2d_array_utils.c	/^size_t	size_of_2d_array(char **array)$/
skip_char	mandatory/utils.c	/^int	skip_char(char *str, int *i, char c)$/
skip_until_char	mandatory/utils.c	/^int	skip_until_char(char *str, int *i, char c)$/
space_token	mandatory/add_token.c	/^void	space_token(t_token **head)$/
split_value	mandatory/expander.c	/^t_token	*split_value(char *value)$/
syntax_analysis	mandatory/syntax_analysis.c	/^bool	syntax_analysis(t_token *tokens)$/
t_env	mandatory/main.h	/^}	t_env;$/
t_env_to_char_pp	mandatory/dup_env.c	/^char	**t_env_to_char_pp(t_env *denv)$/
t_info	mandatory/main.h	/^}	t_info;$/
t_list	libft/libft.h	/^}				t_list;$/
t_seq	mandatory/main.h	/^}	t_seq;$/
t_token	mandatory/main.h	/^}	t_token;$/
tokenizer	mandatory/tokenizer.c	/^void	tokenizer(t_token **tokens, char *s)$/
update_paths_env	mandatory/cd.c	/^void	update_paths_env(t_env **env)$/
