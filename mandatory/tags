Mmain	main.c	/^int	main(int n, char **args, char **env)$/
add_element_2d_array	2d_array_utils_2.c	/^char	**add_element_2d_array(char **array, char *el/
add_element_2d_array_last	2d_array_utils_3.c	/^char	**add_element_2d_array_last(char **array, cha/
add_element_not_last_2d_array	2d_array_utils_2.c	/^static char	**add_element_not_last_2d_array(char */
add_element_to_last_2d_array	2d_array_utils_2.c	/^static char	**add_element_to_last_2d_array(char **/
add_key	export.c	/^void  add_key(t_env **env, char *key, char *value)/
add_key_token	add_token_2.c	/^void	add_key_token(t_token **head, char *start, ch/
add_keyword_token	tokenizer_utils.c	/^char	*add_keyword_token(t_token **head, char *curr/
add_seq_back	parser.c	/^static void	add_seq_back(t_seq **list, t_seq *new_/
add_token_back	tokenizer_utils_2.c	/^void	add_token_back(t_token **list, t_token *new_t/
add_variable_back	dup_env.c	/^void	add_variable_back(t_env **list, t_env *new_va/
add_word_token	add_token_2.c	/^void	add_word_token(t_token **head, char *start, c/
bcd	cd.c	/^int	bcd(char *path, t_env **env)$/
becho	echo.c	/^void	becho(char **args, int fd)$/
bexport	export.c	/^int bexport(char **args, t_env **env)$/
cd_home	cd.c	/^static	int	cd_home(t_env	**env)$/
check_first_and_last	syntax_analysis.c	/^bool	check_first_and_last(t_token *token)$/
check_pip	syntax_analysis.c	/^bool	check_pip(t_token *token)$/
check_quotes	syntax_analysis.c	/^bool	check_quotes(t_token *token)$/
check_redirection	syntax_analysis.c	/^bool	check_redirection(t_token *token)$/
chop_key	tokenizer.c	/^char	*chop_key(t_token **tokens, char *current)$/
chop_word	tokenizer.c	/^char	*chop_word(t_token **tokens, char *current, b/
corrector	corrector.c	/^t_token	*corrector(t_token *token)$/
create_seq	parser.c	/^static t_seq	*create_seq(char **args, int in, int /
create_token	tokenizer_utils_2.c	/^t_token	*create_token(char *elem, int type)$/
create_variable	dup_env.c	/^t_env	*create_variable(char *key, char *value)$/
delete_element_2d_array	2d_array_utils.c	/^char	**delete_element_2d_array(char **array, size_/
dup_2d_array	2d_array_utils.c	/^char	**dup_2d_array(char **array)$/
dup_env	dup_env.c	/^t_env	*dup_env(char **env)$/
e_builtins	eval.c	/^enum e_builtins {e_echo, e_env, e_export, e_unset,/
e_token_types	main.h	/^enum e_token_types {redirection, word, pip, space,/
eval_in_redirection	parser.c	/^static void	eval_in_redirection(t_seq *seq, char */
eval_out_redirection	parser.c	/^static void	eval_out_redirection(t_seq *seq, char /
eval_pipes	parser.c	/^static void	eval_pipes(t_seq *seq)$/
eval_redirection	parser.c	/^static t_token	*eval_redirection(t_seq *seq, t_tok/
eval_seq	eval.c	/^void	eval_seq(t_seq *list, t_env	**denv)$/
exec_builtin	eval.c	/^void	exec_builtin(t_env **env, t_seq *seq, int bui/
exec_seq	exec.c	/^void	exec_seq(t_seq *seq, t_env **denv)$/
expander	expander.c	/^t_token	*expander(t_token *token, t_env *env)$/
find_in_2d_array	2d_array_utils.c	/^int	find_in_2d_array(char **array, char *str)$/
find_in_path	eval.c	/^char *find_in_path(char *cmd, char **env)$/
find_key	cd.c	/^t_env *find_key(t_env *env, char *key)$/
find_value	expander.c	/^char	*find_value(t_env *env, char *key)$/
free_2d_array	2d_array_utils_2.c	/^void	free_2d_array(char **array)$/
free_env	dup_env.c	/^void	free_env(t_env *env)$/
free_seq	parser.c	/^void	free_seq(t_seq *seq)$/
free_token	tokenizer_utils_2.c	/^void	free_token(t_token *token)$/
free_tokens	tokenizer_utils_2.c	/^void	free_tokens(t_token *token)$/
ft_add_history	add_history.c	/^void	ft_add_history(char *cmd)$/
ft_exec	eval.c	/^pid_t	ft_exec(char *cmd, t_seq *seq, char **env)$/
ft_split_paths	eval.c	/^char	**ft_split_paths(char **env)$/
ft_strjoin_free	utils.c	/^char	*ft_strjoin_free(char *s1, char *s2)$/
get_last_seq	parser.c	/^static t_seq	*get_last_seq(t_seq *seq)$/
get_last_token	tokenizer_utils_2.c	/^t_token	*get_last_token(t_token *token)$/
get_last_var	dup_env.c	/^t_env	*get_last_var(t_env *var)$/
heredoc	parser.c	/^static int	heredoc(char *delimiter)$/
init_2d_array	2d_array_utils_2.c	/^char	**init_2d_array(void)$/
init_indexs	utils.c	/^void	init_indexs(int amount, int value, ...)$/
is_builtin	eval.c	/^int	is_builtin(char *cmd)$/
is_flag	echo.c	/^static int	is_flag(char *str)$/
is_inside_quotes	tokenizer.c	/^bool	is_inside_quotes(char c)$/
is_keyword	tokenizer_utils.c	/^bool	is_keyword(char c)$/
is_quote	tokenizer_utils.c	/^bool	is_quote(char c)$/
is_valid_key	export.c	/^bool  is_valid_key(char *key)$/
joiner	corrector.c	/^t_token	*joiner(t_token *token)$/
panic	utils.c	/^void	panic(bool con, char *msg, const char *func)$/
parser	parser.c	/^t_seq	*parser(t_token *list)$/
parsing	parsing.c	/^t_seq	*parsing(char *line, t_env *denv)$/
pip_token	add_token.c	/^void	pip_token(t_token **head)$/
print_2d_array	2d_array_utils.c	/^void	print_2d_array(char **array, int fd)$/
print_logo	print_logo.c	/^void	print_logo()$/
print_seq	parser.c	/^void	print_seq(t_seq *seq)$/
print_tokens	print_tokens.c	/^void	print_tokens(t_token *token)$/
quote_token	add_token.c	/^void	quote_token(t_token **head, char *current, bo/
redirection_token	add_token.c	/^void	redirection_token(t_token **head, char *curre/
remove_quotes	corrector.c	/^t_token	*remove_quotes(t_token *token)$/
remove_space	corrector.c	/^t_token	*remove_space(t_token *token)$/
return_token_type	tokenizer_utils.c	/^char	*return_token_type(int type)$/
shell_loop	shell_loop.c	/^void	shell_loop(t_env **denv)$/
size_of_2d_array	2d_array_utils.c	/^size_t	size_of_2d_array(char **array)$/
skip_char	utils.c	/^int	skip_char(char *str, int *i, char c)$/
skip_until_char	utils.c	/^int	skip_until_char(char *str, int *i, char c)$/
space_token	add_token.c	/^void	space_token(t_token **head)$/
split_value	expander.c	/^t_token	*split_value(char *value)$/
syntax_analysis	syntax_analysis.c	/^bool	syntax_analysis(t_token *tokens)$/
t_env	main.h	/^}	t_env;$/
t_env_to_char_pp	dup_env.c	/^char	**t_env_to_char_pp(t_env *denv)$/
t_info	main.h	/^}	t_info;$/
t_seq	main.h	/^}	t_seq;$/
t_token	main.h	/^}	t_token;$/
tokenizer	tokenizer.c	/^void	tokenizer(t_token **tokens, char *s)$/
update_paths_env	cd.c	/^void	update_paths_env(t_env **env)$/
